spring.application.name=User
server.port=8080

eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka

eureka.instance.prefer-ip-address=true


spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

spring.datasource.url=jdbc:sqlserver://host.docker.internal:1433;databaseName=Userr;encrypt=true;trustServerCertificate=true;

spring.datasource.username=User
spring.datasource.password=User1234

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.cloud.function.definition=userCreatedConsumer;userUpdateConsumer;userDeleteeConsumer
spring.cloud.function.scan.enabled=false

#Creating user with event's logic-Start
spring.cloud.stream.bindings.userCreatedConsumer-in-0.destination=user-created
spring.cloud.stream.rabbit.bindings.userCreatedConsumer-in-0.consumer.exchangeType=topic
#Creating user with event's logic-End

#Updating user with event's logic-Start
spring.cloud.stream.bindings.userUpdateConsumer-in-0.destination=user-update
spring.cloud.stream.rabbit.bindings.userUpdateConsumer-in-0.consumer.exchangeType=topic
#Updating user with event's logic-Start

#Deleting user with event's logic-Start
spring.cloud.stream.bindings.userDeleteeConsumer-in-0.destination=user-delete
spring.cloud.stream.rabbit.bindings.userDeleteeConsumer-in-0.consumer.exchangeType=topic
#Deleting user with event's logic-End

#Rabbit for docker configuration
spring.rabbitmq.host=host.docker.internal
spring.rabbitmq.port=5672
#Rabbit for docker configuration
